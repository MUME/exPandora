#
# The config file for engine scriplets. 
#
# Be very carefull when editing this one
# Possible Cause entries are C_MOVE, C_SCOUT, C_LOOK
# Possible Result entries are R_ROOM, R_EXITS, R_BLIND, R_PROMPT, R_FAIL, R_DESC
# and empty of course - E_EMPTY
#
# Programming the engine using this config file is similar to programming state-automates.
# You define the reaction on Cause Result combination on stacks top.
# The table below is for better understanding.
# The code is the basic functionality of mapper.
# if you leave something or cut some possibilities - mapper might work unstable.
# If no rules are given at all, then mapper is just a proxy.
#
# Possible commands are:
# done 		 - done for now. do not recall interpreter until new events arrive.
# redraw	 - force redraw without any special checks
# swap		 - swap positions stacks. Usually followed by redraw
# try_dir	 - for all rooms in stack, put the rooms in direction from C_MOVE data in
#		   second stack.
# try_all_dirs   - for all rooms in stack, put all possible directions in second stack 
# mappingoff	 - turns off mapping. try_all_dirs automatically turns off mapping as well.
#		   thought i still added it to the engine code, just to make its code 
#		   more clear.
# apply_roomname - apply roomname check to all rooms in first stack and put matches in 
#		   second.
# apply_desc	 - apply description check to all rooms in first stack and put matches in 
#		   second.
# apply_exits    - apply exits check...
# apply_terrain  - apply terrain check...
# Note: last three apply_x commands depend on internal flags - user can toggle the flags 
# 	interactively. (and in config file)
# Cremove	 - remove the top element from causes stack.
# Rremove	 - remove the top element from results stack.
# resync	 - do a total resync using the last roomname. This will be done automatically
#		   depending on special flag if we loose our position.
# 
# Notes:
#	
# redraw is probably the slowest command, so its adviced to redraw only on terrain checks.
# terrain check happens only when prompt arrives. So when normal roomname+desc+exits+terrain
# block arrives we only redraw once. Inner mechanics will redraw only on this prompt and 
# terrain check. Others will be ignored.
#
# if any stack actions are attempted. Like try_dir etc and the possibility stacks are empty
# mapper wil do resync. 
#
#         \   E_EMPTY             C_MOVE             C_LOOK            C_SCOUT 
# ----------------------------------------------------------------------------------  
# E_EMPTY  |  done           | done            | done            | done            |
#          |                 |                 |                 |                 |
#          |                 |                 |                 |                 |
#          |                 |                 |                 |                 |
#          |                 |                 |                 |                 |
#----------+-----------------+-----------------+-----------------+-----------------|
# R_ROOM   |  try_all_dirs   | try_dir, swap,  | apply_roomname, |                 |
#          |  apply_roomname | apply_roomname, | swap,           |                 |
#          |  Rremove        | swap, Rremove,  | Rremove, Cremove|                 |
#          |  swap           | Cremove         |                 |                 |
#          |                 |                 |                 |                 |
#----------+-----------------+-----------------+-----------------+-----------------|
# R_BLIND  | try_all_dirs,   | try_dir,        |                 |                 |
#          | Rremove,        | swap, Rremove,  | Rremove         |                 |
#          | swap            | Cremove         | Cremove         |                 |
#          |                 |                 |                 |                 |
#          |                 |                 |                 |                 |
#----------+-----------------+-----------------+-----------------+-----------------|
# R_DESC   | apply_desc      | apply_desc      | apply_desc      |                 |
#          | swap            | swap,           | swap            |                 |
#          | Rremove         | Rremove         | Rremove         |                 |
#          |                 |                 |                 |                 |
#          |                 |                 |                 |                 |
#----------+-----------------+-----------------+-----------------+-----------------|
# R_EXITS  | apply_exits     | apply_exits     | apply_exits     |                 |
#          | swap            | swap            | swap            |                 |
#          | Rremove         | Rremove         | Rremove         |                 |
#          |                 |                 |                 |                 |
#          |                 |                 |                 |                 |
#----------+-----------------+-----------------+-----------------+-----------------|
# R_PROMPT | apply_prompt    | apply_prompt    | apply_prompt    |                 |
#          | swap            | swap, Rremove   | swap, Rremove   |                 |
#          | Rremove         | redraw          | redraw          |                 |
#          |                 |                 |                 |                 |
#          |                 |                 |                 |                 |
#----------+-----------------+-----------------+-----------------+-----------------|
# R_FAIL   | Rremove         | Rremove,        | Rremove, Cremove|                 |
#          |                 | Cremove         | some fuckup ... |                 |
#          |                 | (check_fail)    |                 |                 |
#          |                 |                 |                 |                 |
#          |                 |                 |                 |                 |
#----------------------------------------------------------------------------------.
#
# And the actual code ...


engine EMPTY 	EMPTY		done
engine EMPTY	R_ROOM		try_all_dirs; mappingoff; apply_roomname; swap; Rremove
engine EMPTY	R_BLIND		try_all_dirs; mappingoff; swap; Rremove; redraw
engine EMPTY	R_DESC		apply_desc; swap; Rremove; redraw
engine EMPTY	R_EXITS		apply_exits; swap; Rremove
engine EMPTY	R_PROMPT	apply_prompt; swap; Rremove
engine EMPTY	R_FAIL		Rremove

engine C_MOVE	EMPTY		done
engine C_MOVE	R_ROOM		try_dir; swap; apply_roomname; swap; Rremove; Cremove;
engine C_MOVE	R_BLIND		try_dir; mappingoff; swap; Rremove; Cremove; redraw
engine C_MOVE	R_DESC		apply_desc; swap; Rremove; redraw
engine C_MOVE	R_EXITS		apply_exits; swap; Rremove
engine C_MOVE	R_PROMPT	apply_prompt; swap; Rremove
engine C_MOVE	R_FAIL		Rremove; Cremove

engine C_LOOK	EMPTY		done
engine C_LOOK	R_ROOM		apply_roomname; swap; Rremove; Cremove
engine C_LOOK	R_BLIND		mappingoff; Rremove; Cremove
engine C_LOOK	R_DESC		apply_desc; swap; Rremove; redraw
engine C_LOOK	R_EXITS		apply_exits; swap; Rremove
engine C_LOOK	R_PROMPT	apply_prompt; swap; Rremove
engine C_LOOK	R_FAIL		Cremove; Rremove


# scouting is a bit trickier - there the C_SCOUT stays in stack until R_PROMPT
engine C_SCOUT	EMPTY		mappingoff; done
engine C_SCOUT	R_ROOM		mappingoff; Rremove 
engine C_SCOUT	R_BLIND		mappingoff; Rremove
engine C_SCOUT	R_DESC		mappingoff; Rremove; redraw
engine C_SCOUT	R_EXITS		mappingoff; Rremove
engine C_SCOUT	R_PROMPT	mappingoff; Rremove; Cremove
engine C_SCOUT	R_FAIL		mappingoff; Cremove



