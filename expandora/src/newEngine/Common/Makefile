#############################################################################
# Makefile for building: ../expandora.app/Contents/MacOS/expandora
# Generated by qmake (1.07a) (Qt 3.3.3) on: Fri Apr  8 13:07:07 2005
# Project:  Common.pro
# Template: app
# Command: $(QMAKE) -o Makefile Common.pro
#############################################################################

####### Compiler, tools and options

CC       = cc
CXX      = c++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g  -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_ACCESSIBILITY_SUPPORT -DQT_TABLET_SUPPORT -DQT_NO_DEBUG
CXXFLAGS = -pipe -Wall -W -g  -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_ACCESSIBILITY_SUPPORT -DQT_TABLET_SUPPORT -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/Users/alve/Library/qt/mkspecs/default -I. -I$(QTDIR)/include -I/System/Library/Frameworks/OpenGL.framework/Versions/A/Headers -I/System/Library/Frameworks/AGL.framework/Versions/A/Headers -Imoc/
LINK     = c++
LFLAGS   = -headerpad_max_install_names -prebind
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -lqt-mt -framework OpenGL -framework AGL
AR       = ar cq
RANLIB   = ranlib -s
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= cp -f
COPY_DIR = cp -f -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = obj/

####### Files

HEADERS = cmath \
		BaseEvent.h \
		Coordinate.h \
		ListCycler.h \
		ListStack.h \
		ObjectRecycler.h \
		Property.h \
		Room.h \
		RoomCollection.h \
		SimpleString.h \
		TinyList.h \
		AbstractRoomContainer.h
SOURCES = BaseEvent.cpp \
		Controller.cpp \
		Coordinate.cpp \
		ParseEvent.cpp \
		Property.cpp \
		Room.cpp \
		RoomCollection.cpp \
		SimpleString.cpp
OBJECTS = obj/BaseEvent.o \
		obj/Controller.o \
		obj/Coordinate.o \
		obj/ParseEvent.o \
		obj/Property.o \
		obj/Room.o \
		obj/RoomCollection.o \
		obj/SimpleString.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = Common.pro
QMAKE_TARGET = expandora
DESTDIR  = ../expandora.app/Contents/MacOS/
TARGET   = ../expandora.app/Contents/MacOS/expandora

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile ../expandora.app/Contents/MacOS/../PkgInfo ../expandora.app/Contents/MacOS/../Info.plist $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	test -d ../expandora.app/Contents/MacOS/ || mkdir -p ../expandora.app/Contents/MacOS/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: Common.pro  /Users/alve/Library/qt/mkspecs/default/qmake.conf ../../../../Library/qt/lib/libqt-mt.prl
	$(QMAKE) -o Makefile Common.pro
qmake: 
	@$(QMAKE) -o Makefile Common.pro

../expandora.app/Contents/MacOS/../PkgInfo: 
	@test -d ../expandora.app/Contents/MacOS/ || mkdir -p ../expandora.app/Contents/MacOS/
	@$(DEL_FILE) ../expandora.app/Contents/MacOS/../PkgInfo
	@echo "APPL????" >../expandora.app/Contents/MacOS/../PkgInfo
../expandora.app/Contents/MacOS/../Info.plist: 
	@test -d ../expandora.app/Contents/MacOS/ || mkdir -p ../expandora.app/Contents/MacOS/
	@$(DEL_FILE) ../expandora.app/Contents/MacOS/../Info.plist
	@sed -e "s,@ICON@,application.icns,g" -e "s,@EXECUTABLE@,expandora,g" "/Users/alve/Library/qt/mkspecs/default/Info.plist.app" >"../expandora.app/Contents/MacOS/../Info.plist"
dist: 
	@mkdir -p obj/expandora && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) obj/expandora/ && ( cd `dirname obj/expandora` && $(TAR) expandora.tar expandora && $(GZIP) expandora.tar ) && $(MOVE) `dirname obj/expandora`/expandora.tar.gz . && $(DEL_FILE) -r obj/expandora

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) -r ../expandora.app


FORCE:

####### Compile

obj/BaseEvent.o: BaseEvent.cpp BaseEvent.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/BaseEvent.o BaseEvent.cpp

obj/Controller.o: Controller.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Controller.o Controller.cpp

obj/Coordinate.o: Coordinate.cpp Coordinate.h \
		BaseEvent.h \
		ObjectRecycler.h \
		TinyList.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Coordinate.o Coordinate.cpp

obj/ParseEvent.o: ParseEvent.cpp ParseEvent.h \
		ObjectRecycler.h \
		TinyList.h \
		ListStack.h \
		Property.h \
		BaseEvent.h \
		ListCycler.h \
		SimpleString.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ParseEvent.o ParseEvent.cpp

obj/Property.o: Property.cpp Property.h \
		ObjectRecycler.h \
		ListCycler.h \
		ListStack.h \
		SimpleString.h \
		TinyList.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Property.o Property.cpp

obj/Room.o: Room.cpp Room.h \
		RoomCollection.h \
		ParseEvent.h \
		Property.h \
		Coordinate.h \
		ObjectRecycler.h \
		TinyList.h \
		ListStack.h \
		BaseEvent.h \
		ListCycler.h \
		SimpleString.h \
		AbstractRoomContainer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Room.o Room.cpp

obj/RoomCollection.o: RoomCollection.cpp RoomCollection.h \
		ParseEvent.h \
		AbstractRoomContainer.h \
		Room.h \
		ObjectRecycler.h \
		TinyList.h \
		ListStack.h \
		Property.h \
		BaseEvent.h \
		ListCycler.h \
		SimpleString.h \
		Coordinate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/RoomCollection.o RoomCollection.cpp

obj/SimpleString.o: SimpleString.cpp SimpleString.h \
		TinyList.h \
		ObjectRecycler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/SimpleString.o SimpleString.cpp

####### Install

install:  

uninstall:  

