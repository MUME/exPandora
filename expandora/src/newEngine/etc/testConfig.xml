<configuration>
	<component id="Parser" file="Parser"/>
	<component id="Display" file="Display">
	  <option name="terrains" value="[#.f(<%~WU+:=O/>"/>
	  <option name="terrain:[" value="images/indoors.png"/>
	  <option name="terrain:#" value="images/city.png"/>
	  <option name="terrain:." value="images/field.png"/>
	  <option name="terrain:f" value="images/forest.png"/>
	  <option name="terrain:(" value="images/hills.png"/>
	  <option name="terrain:<" value="images/mountatin.png"/>
	  <option name="terrain:%" value="images/shallowwater.png"/>
	  <option name="terrain:~" value="images/river.png"/>
	  <option name="terrain:W" value="images/rapids.png"/>
	  <option name="terrain:U" value="images/underwater.png"/>
	  <option name="terrain:+" value="images/road.png"/>
	  <option name="terrain::" value="images/brush.png"/>
	  <option name="terrain:=" value="images/tunnel.png"/>
	  <option name="terrain:O" value="images/cavern.png"/>
	</component>
	<component id="Lexer" file="Lexer"/>
	<component id="Filter" file="Filter"/>
	<component id="Map" file="Map"/>
	<component id="Proxy" file="Proxy">
		<option name="localPort" value="3000"/>
		<option name="remoteHost" value="mume.org"/>
		<option name="remotePort" value="4242"/>
	</component>
	<component id="Storage" file="Storage">
		<!--option name="fileName" value="../databases/mume.xml"/-->
	</component>
	
	<connection from="Proxy" signal="analyzeUserStream( char *, int )" 
		    to="Filter" slot="analyzeUserStream( char *, int )"/>
	<connection from="Proxy" signal="analyzeMudStream( char *, int )"
		    to="Filter" slot="analyzeMudStream( char *, int )"/>
	<connection from="Filter" signal="newUserInput(char *)" 
		    to="Lexer" slot="pushUserInput(char *)"/>
	<connection from="Filter" signal="newMudInput(char *)"
		    to="Lexer" slot="pushMudInput(char *)"/>
	<connection from="Lexer" signal="terrainDetected(Property *)"
		    to="Parser" slot="setActiveTerrain(Property *)"/>
	<connection from="Lexer" signal="eventFound(ParseEvent *)"
		    to="Parser" slot="event(ParseEvent *)"/>
	<connection from="Parser" signal="playerMoved(Coordinate *, Coordinate *)"
		    to="Map" slot="playerMoved(Coordinate *, Coordinate *)"/>
	<connection from="Parser" signal="lookingForRooms(QObject *,ParseEvent *)"
		    to="Map" slot="lookingForRooms(QObject *,ParseEvent *)"/>
	<connection from="Parser" signal="lookingForRooms(QObject *,int)"
		    to="Map" slot="lookingForRooms(QObject *,int)"/>
	<connection from="Display" signal="lookingForRooms(QObject *,Frustum *)"
		    to="Map" slot="lookingForRooms(QObject *,Frustum *)"/>
</configuration>
