<configuration>
	<component id="Parser" type="Parser"/>
	<component id="Lexer" type="Lexer"/>
	<component id="Filter" type="Filter"/>
	<component id="Map" type="Map"/>
	<component id="Proxy" type="Proxy">
		<option name="localPort" value="3000"/>
		<option name="remoteHost" value="mume.org"/>
		<option name="remotePort" value="4242"/>
	</component>
	<!--component id="Storage" type="Storage">
		<option name="fileName" value="databases/example_mume.xml"/>
	</component-->
	<component id="Display" type="Display">
	  <option name="terrains" value="[#.f(&lt;%~WU+:=O/>"/>
	<option name="[" value="images/indoors.png"/>
	<option name="#" value="images/city.png"/>
	<option name="." value="images/field.png"/>
	<option name="f" value="images/forest.png"/>
	<option name="(" value="images/hills.png"/>
	<option name="&lt;" value="images/mountain.png"/>
	<option name="%" value="images/shallowwater.png"/>
	<option name="~" value="images/river.png"/>
	<option name="W" value="images/rapids.png"/>
	<option name="U" value="images/underwater.png"/>
	<option name="+" value="images/road.png"/>
	<option name=":" value="images/brush.png"/>
	<option name="=" value="images/tunnel.png"/>
	<option name="O" value="images/cavern.png"/>
	</component>
	
	
	<connection from="Proxy" signal="analyzeUserStream(char *, int)" 
		    to="Filter" slot="analyzeUserStream(char *, int)"/>
	<connection from="Proxy" signal="analyzeMudStream(char *, int)"
		    to="Filter" slot="analyzeMudStream(char *, int)"/>
	<connection from="Filter" signal="newUserInput(char *)" 
		    to="Lexer" slot="pushUserInput(char *)"/>
	<connection from="Filter" signal="newMudInput(char *)"
		    to="Lexer" slot="pushMudInput(char *)"/>
	<connection from="Lexer" signal="terrainDetected(Property *)"
		    to="Parser" slot="setTerrain(Property *)"/>
	<connection from="Lexer" signal="eventFound(ParseEvent *)"
		    to="Parser" slot="event(ParseEvent *)"/>
	<connection from="Parser" signal="playerMoved(Coordinate *, Coordinate *)"
		    to="Display" slot="playerMoved(Coordinate *, Coordinate *)"/>
	<connection from="Parser" signal="lookingForRooms(RoomRecipient *,ParseEvent *)"
		    to="Map" slot="lookingForRooms(RoomRecipient *,ParseEvent *)"/>
	<connection from="Parser" signal="lookingForRooms(RoomRecipient *,unsigned int)"
		    to="Map" slot="lookingForRooms(RoomRecipient *,unsigned int)"/>
	<connection from="Parser" signal="lookingForRooms(RoomRecipient *, Coordinate *)"
		    to="Map" slot="lookingForRooms(RoomRecipient *, Coordinate *)"/>
	<connection from="Display" signal="lookingForRooms(RoomRecipient *,Frustum *)"
		    to="Map" slot="lookingForRooms(RoomRecipient *,Frustum *)"/>
	<connection from="Parser" signal="addExit(int, int, int)"
		    to="Map" slot="addExit(int, int, int)"/>
	<connection from="Parser" signal="createRoom(ParseEvent *, Coordinate *, char)"
		    to="Map" slot="createRoom(ParseEvent *, Coordinate *, char)"/>
	<!--connection from="Storage" signal="addRoom(ParseEvent *, Coordinate *, char, int)"
		    to="Map" slot="createPredefinedRoom(ParseEvent *, Coordinate *, char, int)"/>
	<connection from="Storage" signal="addExit(int, int, int)"
		    to="Map" slot="addExit(int, int, int)"/-->
</configuration>
